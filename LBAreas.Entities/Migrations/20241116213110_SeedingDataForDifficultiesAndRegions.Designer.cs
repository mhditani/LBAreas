// <auto-generated />
using System;
using LBAreas.Entities.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LBAreas.Entities.Migrations
{
    [DbContext(typeof(LBAreasDbContext))]
    [Migration("20241116213110_SeedingDataForDifficultiesAndRegions")]
    partial class SeedingDataForDifficultiesAndRegions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LBAreas.Entities.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d99c20c-987a-483c-8788-90670258c672"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("bbbf1c33-df7d-4721-9547-111644ac8bb1"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("d3045da1-c6b6-4267-a908-c2c9264e67ff"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("LBAreas.Entities.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b453ec82-345b-4761-ba87-a6d6222f6d0b"),
                            Code = "AR",
                            Name = "Akkar",
                            RegionImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRIQwWSZKnnDMLL3fq_6bDn1x1UeTi0wLTrpg&s"
                        },
                        new
                        {
                            Id = new Guid("7414847b-b57a-4d50-8a72-bf4dce5606e6"),
                            Code = "BH",
                            Name = "Baalbeck-Hermel",
                            RegionImageUrl = "https://media.safarway.com/content/f5370e10-51c9-46b6-8694-ae8df0df1805_sm.jpg"
                        },
                        new
                        {
                            Id = new Guid("f27e7f6f-cd6a-497f-b2ec-066ee21b86db"),
                            Code = "BA",
                            Name = "Bekaa",
                            RegionImageUrl = "https://www.wine-searcher.com/images/region/bekaa-valley-7088-1-3.jpg"
                        },
                        new
                        {
                            Id = new Guid("0dd644b9-0675-47da-bcb5-9b97c6c7ba6f"),
                            Code = "ML",
                            Name = " Mount Lebanon",
                            RegionImageUrl = "https://mountainsmagleb.com/wp-content/uploads/2020/03/Mount-Kneisse-Mario-Fares-300x225.jpg"
                        },
                        new
                        {
                            Id = new Guid("29399f0e-6a9b-40ed-9e3e-a4d1b8d5d1d7"),
                            Code = "NB",
                            Name = "North Lebanon",
                            RegionImageUrl = "https://i.ytimg.com/vi/39qYU5MC_M0/hq720.jpg?sqp=-oaymwEhCK4FEIIDSFryq4qpAxMIARUAAAAAGAElAADIQj0AgKJD&rs=AOn4CLBz5cYN1W-0IIQT36IqUZ1tiP3jeA"
                        },
                        new
                        {
                            Id = new Guid("fe6734b6-1b1a-490f-8a66-8ac6458347f8"),
                            Code = "SB",
                            Name = "South Lebanon",
                            RegionImageUrl = "https://i.pinimg.com/236x/5c/b8/88/5cb8883d65f0c9db94bc208cd2982750.jpg"
                        });
                });

            modelBuilder.Entity("LBAreas.Entities.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("LBAreas.Entities.Models.Domain.Walk", b =>
                {
                    b.HasOne("LBAreas.Entities.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBAreas.Entities.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
